type User {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String! @unique
  password: String!
  name: String!
  timeLogs: [TimeLog!]! @relation(name: "TimeLogsByUser", onDelete: SET_NULL)
  timeTags: [TimeTag!]! @relation(name:"TimeTagsByUser", onDelete: SET_NULL)
  role: ROLE_TAG! @default(value: "CUSTOMER")

  confirmedEmail: Boolean! @default(value: "false")
  resetPasswordEmail: Boolean! @default(value: "false")
}

type ConfirmEmail {
  userId: ID! @unique
  link: String! @unique
}

type ResetPasswordEmail {
  userId: ID! @unique
  link: String! @unique
}
type TimeTag {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  description: String
  color: String! 
  deleted: Boolean @default(value: "false")
  user: User @relation(name:"TimeTagsByUser", onDelete: SET_NULL)
  isGeneral: Boolean @default(value: "false")
  timeLogs: [TimeLog!]! @relation(name: "TimeTags", onDelete: SET_NULL)
}

type TimeLog {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  text: String
  date: DateTime
  isRange: Boolean @default(value: "true")
  startTime: DateTime
  endTime: DateTime
  totalTime: Int
  deleted: Boolean @default(value: "false")
  user: User! @relation(name: "TimeLogsByUser", onDelete: SET_NULL)
  tags: [TimeTag!]! @relation(name: "TimeTags", onDelete: SET_NULL)
}

enum ROLE_TAG {
  ADMIN
  CUSTOMER
}
